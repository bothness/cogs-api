{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "App.svelte",
    "AxisX.svelte",
    "AxisY.svelte",
    "Chart.svelte",
    "Map.svelte",
    "MultiLine.svelte",
    "Panel.svelte",
    "Select.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let ssr = false;\n\texport let pointerEvents = true;\n\texport let position = 'relative';\n\texport let percentRange = false;\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 100;\n\texport let containerHeight = height || 100;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let extents = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable();\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\tconst _extents = writable();\n\tconst _config = writable(config);\n\n\t$: _percentRange.set(percentRange);\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _extents.set(filterObject(extents));\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width < 0 && b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative width and height. Did you forget to set a width or height on the container?');\n\t\t} else if (b.width < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has a negative width. Did you forget to set that CSS on the container?');\n\t\t} else if (b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative height. Did you forget to set that CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\n\t\treturn { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n{#if (ssr === true || typeof window !== 'undefined')}\n\t<div\n\t\tclass=\"layercake-container\"\n\t\tstyle=\"\n\t\t\tposition:{position};\n\t\t\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\n\t\t\t{pointerEvents === false ? 'pointer-events:none;' : ''}\n\t\t\"\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t></slot>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<div\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<slot></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let fixedAspectRatio = 1;\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<svg\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle=\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let viewBox = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}\n</style>\n",
    "<script>\n\timport Panel from './Panel.svelte';\n\timport Map from './Map.svelte';\n\timport MapSource from './MapSource.svelte';\n\timport MapLayer from './MapLayer.svelte';\n\timport Chart from './Chart.svelte';\n\timport Select from './Select.svelte';\n\timport { getTopo, getTotals, getSeries, getCentroids, getBreaks, pivotData } from './utils.js';\n\t\n\tconst mapstyle = 'https://bothness.github.io/ons-basemaps/data/style-omt.json';\n\tconst topojson = {\n\t\turl: 'https://bothness.github.io/geo-data/topojson/lac2019ss.topojson',\n\t\tlayer: 'lac2019',\n\t\tid: 'AREACD'\n\t};\n\tconst colors = [\n\t\t'rgb(127, 205, 187)',\n\t\t'rgb(65, 182, 196)',\n\t\t'rgb(29, 145, 192)',\n\t\t'rgb(34, 94, 168)',\n\t\t'rgb(12, 44, 132)'\n\t];\n\t\n\tlet map = null;\n\t\n\tlet data = {\n\t\tboundaries: null,\n\t\tcentroids: null,\n\t\ttotals: null,\n\t\tbreaks: null,\n\t\tseries: null,\n\t\tlookup: null\n\t};\n\t\n\tlet highlight = {\n\t\thovered: null,\n\t\tselected: null,\n\t\tmulti: null\n\t};\n\n\tlet loaded = false;\n\t\n\t// Load topojson data to geojson object\n\tgetTopo(topojson.url, topojson.layer)\n\t.then(result => {\n\t\tdata.boundaries = result;\n\t\treturn data.boundaries;\n\t})\n\t.then(boundaries => {\n\t\t// Create LAD code/name lookup from geojson\n\t\tlet lookup = {};\n\t\tfor (let i in boundaries.features) {\n\t\t\tlookup[boundaries.features[i].properties['AREACD']] = boundaries.features[i].properties['AREANM'];\n\t\t}\n\t\tdata.lookup = lookup;\n\n\t\treturn boundaries;\n\t})\n\t.then(boundaries => {\n\t\t// Generate centroids from geojson\n\t\tdata.centroids = getCentroids(boundaries);\n\n\t\treturn data.centroids;\n\t})\n\t.then(() => {\n\n\t\t// Load totals from API\n\t\tgetTotals().then(result => {\n\t\t\tdata.totals = result;\n\t\t\treturn data.totals;\n\t\t})\n\t\t.then(totals => {\n\t\t\tdata.breaks = getBreaks(totals);\n\t\t\treturn data.breaks;\n\t\t})\n\t\t.then(() => {\n\n\t\t\t// Load time series from API\n\t\t\tgetSeries().then(result => {\n\t\t\t\tdata.series = pivotData(result);\n\n\t\t\t\treturn data.series;\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tloaded = true;\n\t\t\t});\n\t\t});\n\t});\n\n\t// Select function, if required\n\tfunction doSelect() {\n\t\treturn true;\n\t}\n\t\n</script>\n\n<style>\n\t:global(body) {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\tmain {\n\t\twidth: 100%;\n\t\tpadding: 12px;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n\tsmall {\n\t\tcolor: #999;\n\t}\n\t.chart {\n\t\twidth: 100%;\n\t\theight: 200px;\n\t\tmargin-top: 20px;\n\t\tmargin-bottom: 5px;\n\t}\n</style>\n\n{#if loaded}\n<Panel>\n\t<main>\n\t\t<h1>Covid-19 in Care Homes</h1>\n\t\t{#if data.lookup}\n\t\t<Select options={data.lookup} bind:selected={highlight.selected} search={true} on:select={doSelect} />\n\t\t{/if}\n\t\t{#if highlight.selected && data.totals && data.totals.find(d => d.geocode == highlight.selected)}\n\t\t<p>{data.totals.find(d => d.geocode == highlight.selected).value} care home deaths</p>\n\t\t{:else}\n\t\t<p>No data on care home deaths</p>\n\t\t{/if}\n\t\t{#if data.series}\n\t\t<div class=\"chart\">\n\t\t\t<Chart data={data.series} bind:hovered={highlight.hovered} bind:selected={highlight.selected} />\n\t\t</div>\n\t\t{/if}\n\t\t<p><small>Data aggregated by COGS from national data for Northern Ireland, Scotland, Wales and England.</small></p>\n\t</main>\n</Panel>\n\n<Map style={mapstyle} minzoom={3} maxzoom={13}>\n\t{#if data.boundaries}\n\t<MapSource id=\"lad\" type=\"geojson\" data={data.boundaries} promoteId={topojson.id}>\n\t\t<MapLayer id=\"fill\" source=\"lad\" sibling=\"lad-point\" type=\"fill\" bind:hovered={highlight.hovered} bind:selected={highlight.selected} paint=\"{{'fill-color': 'rgba(255, 255, 255, 0)'}}\" click={true} hover={true} />\n\t\t<MapLayer id=\"line\" source=\"lad\" type=\"line\" highlight={true} highlighted={highlight.multi} paint=\"{{\n\t\t\t'line-color': ['case',\n\t\t\t\t['==', ['feature-state','selected'], true], 'rgb(0, 0, 0)',\n\t\t\t\t['==', ['feature-state','hovered'], true], 'rgb(72, 72, 72)',\n\t\t\t\t'rgb(128, 128, 128)'\n\t\t\t],\n\t\t\t'line-width': ['case',\n\t\t\t\t['==', ['feature-state','selected'], true], 2,\n\t\t\t\t['==', ['feature-state','hovered'], true], 1,\n\t\t\t\t0.5\n\t\t\t]\n\t\t}}\" />\n\t</MapSource>\n\t{/if}\n\t{#if data.centroids && data.totals && data.breaks}\n\t<MapSource id=\"lad-point\" type=\"geojson\" data={data.centroids} promoteId={topojson.id}>\n\t\t<MapLayer id=\"lad-point\" source=\"lad-point\" type=\"circle\" data={data.totals} breaks={data.breaks} {colors} paint=\"{{\n\t\t'circle-color': ['case',\n\t\t\t['!=', ['feature-state','color'], null],\n\t\t  ['feature-state','color'],\n\t\t\t'rgba(255, 255, 255, 0)'\n\t\t],\n\t\t'circle-radius': ['case',\n\t\t  ['!=', ['feature-state', 'value'], null],\n\t\t  ['*', ['sqrt', ['/', ['feature-state', 'value'], data.breaks[5]]], 14],\n\t\t  0\n\t\t],\n\t\t'circle-stroke-color': ['case',\n\t\t\t['==', ['feature-state','selected'], true], 'rgb(0, 0, 0)',\n\t\t\t['==', ['feature-state','hovered'], true], 'rgb(72, 72, 72)',\n\t\t\t'rgba(255, 255, 255, 0)'\n\t\t],\n\t\t'circle-stroke-width': ['case',\n\t\t\t['==', ['feature-state','selected'], true], 2,\n\t\t\t['==', ['feature-state','hovered'], true], 1,\n\t\t\t0.5\n\t\t],\n\t\t'circle-opacity': 0.8\n\t\t}}\" />\n\t</MapSource>\n\t{/if}\n</Map>\n{/if}",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { width, height, xScale, yScale, yRange } = getContext('LayerCake');\n\n\texport let gridlines = true;\n\texport let formatTick = d => d;\n\texport let baseline = false;\n\texport let snapTicks = false;\n\texport let ticks = undefined;\n\texport let xTick = undefined;\n\texport let yTick = 16;\n\texport let dxTick = 0;\n\texport let dyTick = 0;\n\n\t$: isBandwidth = typeof $xScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$xScale.domain() :\n\t\t\t$xScale.ticks(ticks);\n\n\tfunction textAnchor(i) {\n\t\tif (snapTicks === true) {\n\t\t\tif (i === 0) {\n\t\t\t\treturn 'start';\n\t\t\t}\n\t\t\tif (i === tickVals.length - 1) {\n\t\t\t\treturn 'end';\n\t\t\t}\n\t\t}\n\t\treturn 'middle';\n\t}\n</script>\n\n<g class='axis x-axis'>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{ tick }' transform='translate({$xScale(tick)},{$yRange[0]})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line y1='{$height * -1}' y2='0' x1='0' x2='0'></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx=\"{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0 }\"\n\t\t\t\ty='{yTick}'\n\t\t\t\tdx='{dxTick}'\n\t\t\t\tdy='{dyTick}'\n\t\t\t\ttext-anchor='{textAnchor(i)}'>{formatTick(tick)}</text>\n\t\t</g>\n\t{/each}\n\t{#if baseline === true}\n\t\t<line class=\"baseline\" y1='{$height + 0.5}' y2='{$height + 0.5}' x1='0' x2='{$width}'></line>\n\t{/if}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\tline,\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t}\n\n\t.baseline {\n\t\tstroke-dasharray: 0;\n\t}\n</style>",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding, xRange, xScale, yScale } = getContext('LayerCake');\n\n\texport let ticks = 4;\n\texport let gridlines = true;\n\texport let formatTick = d => d;\n\texport let xTick = 0;\n\texport let yTick = 0;\n\texport let dxTick = 0;\n\texport let dyTick = -4;\n\texport let textAnchor = 'start';\n\n\t$: isBandwidth = typeof $yScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$yScale.domain() :\n\t\t\t$yScale.ticks(ticks);\n</script>\n\n<g class='axis y-axis' transform='translate({-$padding.left}, 0)'>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{tick}' transform='translate({$xRange[0] + (isBandwidth ? $padding.left : 0)}, {$yScale(tick)})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line\n\t\t\t\t\tx2='100%'\n\t\t\t\t\ty1={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t\ty2={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx='{xTick}'\n\t\t\t\ty='{yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}'\n\t\t\t\tdx='{isBandwidth ? -5 : dxTick}'\n\t\t\t\tdy='{isBandwidth ? 4 : dyTick}'\n\t\t\t\tstyle=\"text-anchor:{isBandwidth ? 'end' : textAnchor};\"\n\t\t\t>{formatTick(tick)}</text>\n\t\t</g>\n\t{/each}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n</style>",
    "<script>\n\timport { LayerCake, Svg, Html } from 'layercake';\n\timport { scaleOrdinal } from 'd3-scale';\n\timport { timeParse, timeFormat } from 'd3-time-format';\n\timport { format, precisionFixed } from 'd3-format';\n\n\timport MultiLine from './MultiLine.svelte';\n\timport AxisX from './AxisX.svelte';\n\timport AxisY from './AxisY.svelte';\n\n\texport let data;\n\texport let hovered;\n\texport let selected;\n\n\t/* --------------------------------------------\n\t * Set what is our x key to separate it from the other series\n\t */\n\tconst xKey = 'day';\n\tconst yKey = 'value';\n\tconst zKey = 'key';\n\n\tconst seriesNames = Object.keys(data[0]).filter(d => d !== xKey);\n\tconst seriesColors = ['#dddddd'];\n\n\tconst parseDate = timeParse('%Y-%m-%d');\n\n\tconst dataLong = seriesNames.map(key => {\n\t\treturn {\n\t\t\tkey,\n\t\t\tvalues: data.map(d => {\n\t\t\t\td[xKey] = typeof d[xKey] === 'string' ? parseDate(d[xKey]) : d[xKey]; // Conditional required for sapper\n\t\t\t\treturn {\n\t\t\t\t\tkey,\n\t\t\t\t\t[yKey]: +d[key],\n\t\t\t\t\t[xKey]: d[xKey]\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\t});\n\tconsole.log(dataLong);\n\n\t// Make a flat array of the `values` of our nested series\n\t// we can pluck the `value` field from each item in the array to measure extents\n\tconst flatten = data => data.reduce((memo, group) => {\n\t\treturn memo.concat(group.values);\n\t}, []);\n\n\tconst formatTickX = timeFormat('%d/%m');\n\tconst formatTickY = d => format(`.${precisionFixed(d)}s`)(d);\n</script>\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n\n<div class=\"chart-container\">\n\t<LayerCake\n\t\tpadding={{ top: 7, right: 10, bottom: 20, left: 25 }}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tz={zKey}\n\t\tyDomain={[0, null]}\n\t\tzScale={scaleOrdinal()}\n\t\tzDomain={seriesNames}\n\t\tzRange={seriesColors}\n\t\tflatData={flatten(dataLong)}\n\t\tdata={dataLong}\n\t>\n\t\t<Svg>\n\t\t\t<AxisX\n\t\t\t\tgridlines={false}\n\t\t\t\tticks={5}\n\t\t\t\tformatTick={formatTickX}\n\t\t\t\tsnapTicks={true}\n\t\t\t/>\n\t\t\t<AxisY\n\t\t\t\tticks={5}\n\t\t\t\tformatTick={formatTickY}\n\t\t\t/>\n\t\t\t<MultiLine bind:hovered={hovered} bind:selected={selected}/>\n\t\t</Svg>\n\n\t</LayerCake>\n</div>",
    "<script>\n\timport { onMount, setContext } from 'svelte';\n\timport mapbox from 'mapbox-gl';\n\n\texport let location = {\n\t\tbounds: [[-10.653041, 49.815042], [1.643370, 60.928626]]  // GB & Ireland bounding box\n\t};\n\texport let style;\n\texport let minzoom = 0;\n\texport let maxzoom = 14;\n\t\n\tlet map;\n\tlet container;\n\tlet options;\n\t\n\tsetContext('map', {\n\t\tgetMap: () => map\n\t});\n\t\n\tif (location.bounds) {\n\t\toptions = { bounds: location.bounds };\n\t} else if (location.lon && location.lat) {\n\t\toptions = {\n\t\t\tcenter: [location.lon, location.lat]\n\t\t}\n\t\tif (location.zoom) {\n\t\t\toptions.zoom = location.zoom;\n\t\t}\n\t};\n\n\tonMount(() => {\n\t\tconst link = document.createElement('link');\n\t\tlink.rel = 'stylesheet';\n\t\tlink.href = 'https://unpkg.com/mapbox-gl/dist/mapbox-gl.css';\n\n\t\tlink.onload = () => {\n\t\t\tmap = new mapbox.Map({\n\t\t\t\tcontainer,\n\t\t\t\tstyle: style,\n\t\t\t\tminZoom: minzoom,\n\t\t\t\tmaxZoom: maxzoom,\n\t\t\t\t...options\n\t\t\t});\n\t\t};\n\n\t\tdocument.head.appendChild(link);\n\n\t\treturn () => {\n\t\t\tmap.remove();\n\t\t\tlink.parentNode.removeChild(link);\n\t\t};\n\t});\n</script>\n\n<style>\n\tdiv {\n\t\twidth: 65%;\n\t\theight: 100%;\n\t\tposition: fixed;\n\t\tright: 0;\n\t}\n\t@media (max-width: 900px) {\n\t\tdiv {\n\t\t\twidth: 55%;\n\t\t}\n\t}\n\t@media (max-width: 600px) {\n\t\tdiv {\n\t\t\twidth: 100%;\n\t\t\theight: 60%;\n\t\t\tposition: absolute;\n\t\t}\n\t}\n</style>\n\n<div bind:this={container}>\n\t{#if map}\n\t\t<slot></slot>\n\t{/if}\n</div>",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { data, xGet, yGet, zGet, xScale, yScale, xRange, yRange, xDomain, yDomain } = getContext('LayerCake');\n\n\t$: path = values => {\n\t\treturn 'M' + values\n\t\t\t.map(d => {\n\t\t\t\treturn $xGet(d) + ',' + $yGet(d);\n\t\t\t})\n\t\t\t.join('L');\n\t};\n\t\n\texport let hovered = null;\n\texport let selected = null;\n\tlet hoveredLine;\n\tlet selectedLine;\n\t\n\tfunction hover(key) {\n\t\thovered = key;\n\t}\n\t\n\tfunction select(key) {\n\t\tselected = key;\n\t}\n\t\n\t$: if (selected) {\n\t\tlet obj = $data.find(o => o.key === selected);\n\t\tif (obj) {\n\t\t\tselectedLine = path(obj.values);\n\t\t} else {\n\t\t\tselectedLine = null;\n\t\t}\n\t}\n\t$: if (hovered) {\n\t\tlet obj = $data.find(o => o.key === hovered);\n\t\tif (obj) {\n\t\t\thoveredLine = path(obj.values);\n\t\t} else {\n\t\t\thoveredLine = null;\n\t\t}\n\t}\n</script>\n\n<g class=\"line-group\">\n\t{#each $data as group}\n\t\t<path\n\t\t\tclass='path-line'\n\t\t\td='{path(group.values)}'\n\t\t\tstroke=\"{$zGet(group)}\"\n\t\t\ton:click={() => select(group.key)}\n\t\t\ton:mouseover={() => hover(group.key)}\n\t\t\ton:mouseleave={() => hover(null)}\n\t\t></path>\n\t{/each}\n\t{#if hovered}\n\t<path\n\t\t\tclass='path-line active muted'\n\t\t\td='{hoveredLine}'\n\t\t></path>\n\t{/if}\n\t{#if selected}\n\t<path\n\t\t\tclass='path-line active'\n\t\t\td='{selectedLine}'\n\t\t></path>\n\t{/if}\n</g>\n\n<style>\n\t.path-line {\n\t\tfill: none;\n\t\tstroke-linejoin: round;\n\t\tstroke-linecap: round;\n\t\tstroke-width: 1px;\n\t}\n\t.active {\n\t\tstroke-width: 2px;\n\t\tstroke: #206095 !important;\n\t\tz-index: 100;\n\t\tpointer-events: none;\n\t}\n\t.muted {\n\t\tstroke-opacity: 0.5;\n\t}\n</style>",
    "<style>\n\tdiv {\n\t\tz-index: 2;\n\t\twidth: 35%;\n\t\tposition: absolute;\n\t}\n\t@media (max-width: 900px) {\n\t\tdiv {\n\t\t\twidth: 45%;\n\t\t}\n\t}\n\t@media (max-width: 600px) {\n\t\tdiv {\n\t\t\twidth: 100%;\n\t\t\ttop: 60%;\n\t\t}\n\t}\n</style>\n\n<div>\n\t<slot></slot>\n</div>",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\t\n\tconst dispatch = createEventDispatcher();\n\t\n\texport let options;\n\texport let selected;\n\texport let search = false;\n\t\n\tlet expanded = false;\n\tlet filter = '';\n\tlet el;\n\tlet input;\n\tlet ops = [];\n\t\n\tfor (let key in options) {\n\t\tops.push({\n\t\t\tcode: key,\n\t\t\tname: options[key]\n\t\t});\n\t}\n\tops.sort((a, b) => a.name.localeCompare(b.name));\n\tlet loaded = true;\n\t\n\t$: regex = filter ? new RegExp(filter, 'i') : null;\n\t$: filtered = regex ? ops.filter(option => regex.test(option.name)) : ops;\n\t\n\tfunction toggle(ev) {\n\t\tev.stopPropagation();\n\t\tfilter = '';\n\t\texpanded = !expanded;\n\t}\n\t\n\t$: if (input && expanded) {\n\t\tinput.focus();\n\t}\n\t\n\tfunction select(option) {\n\t\tdispatch('select', {\n\t\t\tcode: option.code\n\t\t});\n\t\tselected = option.code;\n\t\texpanded = false;\n\t}\n\t\n\tfunction unSelect(ev) {\n\t\tev.stopPropagation();\n\t\tselected = null;\n\t\tdispatch('select', {\n\t\t\tcode: null\n\t\t});\n\t}\n\t\n\t$: document.onclick = function(e){\n\t\tif(e.target !== el){\n\t\t\texpanded = false;\n\t\t}\n\t};\n</script>\n\n<style>\n\ta {\n\t\ttext-decoration: none;\n\t\tdisplay: block;\n\t\tpadding: 0;\n\t\tborder: 2px solid #206095 !important;\n\t}\n\ta span {\n\t\tdisplay: inline-block;\n\t\tpadding: 10px 5px;\n\t}\n\t#dropdown ul {\n\t\tlist-style: none;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tmax-height: 200px;\n\t\toverflow-y: auto;\n\t\toverflow-x: hidden;\n\t}\n\t#dropdown li {\n\t\tline-height: 1em;\n\t\tpadding: 6px 0;\n\t}\n\t#dropdown li:hover {\n\t\tcolor: #fff;\n\t\tbackground-color: #206095;\n\t\tfont-weight: 500;\n\t\tcursor: pointer;\n\t}\n\t/* normalize the input elements, make them look like everything else */\n\t#select input {\n\t\tbackground: transparent;\n\t\tfont-family: inherit;\n\t\tfont-size: inherit;\n\t\tcolor: inherit;\n\t\tfont-weight: inherit;\n\t\tline-height: inherit;\n\t\tdisplay: inline-block;\n\t\tpadding: 10px 5px;\n\t\tmargin: 0;\n\t\twidth: 100%;\n\t\tbackground-color: #fff;\n\t\tborder: 2px solid #206095 !important;\n\t\tborder-radius: 0px;\n\t\t-webkit-appearance: none;\n\t\t-moz-appearance: none;\n\t}\n\t#select input:focus {\n\t\toutline: none;\n\t}\n\t/* custom field (drop-down, text element) styling  */\n\t#select {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\tposition: relative;\n\t}\n\t.active {\n\t\tz-index: 1000;\n\t}\n\t/* the toggle is the visible part in the form */\n\t#toggle,\n\t#select input {\n\t\tline-height: inherit;\n\t\tcolor: #206095;\n\t\tfont-weight: 500;\n\t\tcursor: pointer;\n\t}\n\t/* drop-down list / text element */\n\t#dropdown {\n\t\twidth: 100%;\n\t\tposition: absolute;\n\t\tbackground: #eee;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\topacity: 1;\n\t}\n\t.selected {\n\t\tcolor: #fff !important;\n\t\tbackground-color: #206095;\n\t}\n\t.button {\n\t\tcolor: #fff;\n\t\tbackground-color: #206095;\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-position: center;\n\t\tdisplay: inline-block;\n\t\tfloat: right;\n\t}\n\t.down {\n\t\tbackground-image: url(\"https://onsvisual.github.io/maptemplates/simplemap/images/icons--chevron-down.svg\");\n\t\twidth: 30px;\n\t}\n\t.close {\n\t\tbackground-image: url(\"https://onsvisual.github.io/maptemplates/simplemap/images/x_close_slate.svg\");\n\t\twidth: 8px;\n\t\tmargin-right: 10px;\n\t}\n</style>\n\n{#if loaded}\n<div id=\"select\" class:active={expanded}>\n\t{#if selected}\n\t<a id=\"toggle\" class=\"selected\" on:click={toggle}>\n\t\t<span>{options[selected]}</span>\n\t\t<span class=\"button close\" on:click={unSelect}>&nbsp;</span>\n\t</a>\n\t{:else}\n\t<a id=\"toggle\" on:click={toggle}>\n\t\t<span>Select a local authority</span>\n\t\t<span class=\"button down\">&nbsp;</span>\n\t</a>\n\t{/if}\n\t{#if expanded}\n\t<div id=\"dropdown\" bind:this={el}>\n\t\t{#if search == true}\n\t\t<input type=\"text\" placeholder=\"\" bind:value={filter} autocomplete=\"false\" bind:this={input} />\n\t\t{/if}\n\t\t<ul>\n\t\t\t{#if filtered[0]}\n\t\t\t{#each filtered as option}\n\t\t\t<li on:click=\"{() => select(option)}\">{option.name}</li>\n\t\t\t{/each}\n\t\t\t{:else}\n\t\t\t<li>No results</li>\n\t\t\t{/if}\n\t\t</ul>\n\t</div>\n\t{/if}\n</div>\n{/if}"
  ],
  "names": [],
  "mappings": "AA2TC,kCAAoB,CACpB,kCAAoB,CAAC,AAAQ,CAAC,AAAE,CAAC,AAChC,UAAU,CAAE,UAAU,AACvB,CAAC,AACD,oBAAoB,cAAC,CAAC,AACrB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC;AC3SD,kBAAG,CACH,IAAI,eAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,AACR,CAAC;ACED,GAAG,cAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,OAAO,AAClB,CAAC,AACD,iBAAG,CAAC,AAAQ,CAAC,AAAE,CAAC,AACf,aAAa,CAAE,kBAAkB,AAClC,CAAC;ACPD,GAAG,cAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,QAAQ,CAAE,OAAO,AAClB,CAAC;AC6DO,IAAI,AAAE,CAAC,AACd,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,AACX,CAAC,AACD,IAAI,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,kBAAkB,CAAE,UAAU,CAC9B,eAAe,CAAE,UAAU,CAC3B,UAAU,CAAE,UAAU,AACvB,CAAC,AACD,KAAK,cAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACZ,CAAC,AACD,MAAM,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,GAAG,AACnB,CAAC;AC7DD,KAAK,8BAAC,CAAC,AACN,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,kCAAI,CACJ,oBAAK,CAAC,IAAI,eAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,CAAC,AACpB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACX,IAAI,CAAE,IAAI,AACX,CAAC,AAED,SAAS,8BAAC,CAAC,AACV,gBAAgB,CAAE,CAAC,AACpB,CAAC;AC5BD,KAAK,4BAAC,CAAC,AACN,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,mBAAK,CAAC,IAAI,cAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,CAAC,AACpB,CAAC,AAED,mBAAK,CAAC,IAAI,cAAC,CAAC,AACX,IAAI,CAAE,IAAI,AACX,CAAC,AAED,KAAK,qBAAO,CAAC,IAAI,cAAC,CAAC,AAClB,gBAAgB,CAAE,CAAC,AACpB,CAAC;ACRD,gBAAgB,cAAC,CAAC,AACjB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC;ACAD,GAAG,cAAC,CAAC,AACJ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,CAAC,AACT,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,GAAG,cAAC,CAAC,AACJ,KAAK,CAAE,GAAG,AACX,CAAC,AACF,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,GAAG,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,QAAQ,AACnB,CAAC,AACF,CAAC;ACFD,UAAU,cAAC,CAAC,AACX,IAAI,CAAE,IAAI,CACV,eAAe,CAAE,KAAK,CACtB,cAAc,CAAE,KAAK,CACrB,YAAY,CAAE,GAAG,AAClB,CAAC,AACD,OAAO,cAAC,CAAC,AACR,YAAY,CAAE,GAAG,CACjB,MAAM,CAAE,OAAO,CAAC,UAAU,CAC1B,OAAO,CAAE,GAAG,CACZ,cAAc,CAAE,IAAI,AACrB,CAAC,AACD,MAAM,cAAC,CAAC,AACP,cAAc,CAAE,GAAG,AACpB,CAAC;ACnFD,GAAG,eAAC,CAAC,AACJ,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,GAAG,CACV,QAAQ,CAAE,QAAQ,AACnB,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,GAAG,AACX,CAAC,AACF,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,GAAG,AACT,CAAC,AACF,CAAC;AC6CD,CAAC,8BAAC,CAAC,AACF,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,KAAK,CACd,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,AACrC,CAAC,AACD,gBAAC,CAAC,IAAI,eAAC,CAAC,AACP,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,IAAI,CAAC,GAAG,AAClB,CAAC,AACD,wBAAS,CAAC,EAAE,eAAC,CAAC,AACb,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MAAM,AACnB,CAAC,AACD,wBAAS,CAAC,EAAE,eAAC,CAAC,AACb,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,GAAG,CAAC,CAAC,AACf,CAAC,AACD,wBAAS,CAAC,iBAAE,MAAM,AAAC,CAAC,AACnB,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,OAAO,CACzB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,OAAO,AAChB,CAAC,AAED,sBAAO,CAAC,KAAK,eAAC,CAAC,AACd,UAAU,CAAE,WAAW,CACvB,WAAW,CAAE,OAAO,CACpB,SAAS,CAAE,OAAO,CAClB,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,OAAO,CACpB,WAAW,CAAE,OAAO,CACpB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,IAAI,CAAC,GAAG,CACjB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CACpC,aAAa,CAAE,GAAG,CAClB,kBAAkB,CAAE,IAAI,CACxB,eAAe,CAAE,IAAI,AACtB,CAAC,AACD,sBAAO,CAAC,oBAAK,MAAM,AAAC,CAAC,AACpB,OAAO,CAAE,IAAI,AACd,CAAC,AAED,OAAO,8BAAC,CAAC,AACR,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,AACnB,CAAC,AACD,OAAO,8BAAC,CAAC,AACR,OAAO,CAAE,IAAI,AACd,CAAC,AAED,qCAAO,CACP,sBAAO,CAAC,KAAK,eAAC,CAAC,AACd,WAAW,CAAE,OAAO,CACpB,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,OAAO,AAChB,CAAC,AAED,SAAS,8BAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,IAAI,CAChB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,CAAC,AACX,CAAC,AACD,SAAS,8BAAC,CAAC,AACV,KAAK,CAAE,IAAI,CAAC,UAAU,CACtB,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AACD,OAAO,8BAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,OAAO,CACzB,iBAAiB,CAAE,SAAS,CAC5B,mBAAmB,CAAE,MAAM,CAC3B,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,KAAK,AACb,CAAC,AACD,KAAK,8BAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,mFAAmF,CAAC,CAC1G,KAAK,CAAE,IAAI,AACZ,CAAC,AACD,MAAM,8BAAC,CAAC,AACP,gBAAgB,CAAE,IAAI,6EAA6E,CAAC,CACpG,KAAK,CAAE,GAAG,CACV,YAAY,CAAE,IAAI,AACnB,CAAC"
}